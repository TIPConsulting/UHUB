<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="Microsoft.CSharp.dll" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ Assembly Name="System.dll" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Data.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>  
<#@ import namespace="System.Reflection" #>


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data;
using System.Data.SqlClient;
using UHub.CoreLib.RegExp.Compiled;


//FILE GENERATED BY A TOOL
namespace UHub.CoreLib.RegExp.Compiled
{

public static class RgxCompiled
{

	<# 
	
		var types = Assembly.LoadFrom("../_ExternalDLLs/UHub.CoreLib.RegExp.Compiler.Output.dll").GetTypes().ToList();
		types.ForEach(tt =>
		{
			if(!tt.IsPublic)
			{
				return;
			}

			var parentTypeName = tt.Namespace.Split('.').Last();
			var className = tt.FullName.Split('+')[0];
		
			#>
			
			public static partial class <#=parentTypeName#>
			{
				public static <#=className#> <#=tt.Name#> = new <#=className#>();
			}

		<#});
	
	#>


}
}